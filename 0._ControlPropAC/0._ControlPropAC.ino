//Librerías, objetos y varialbes para SD
#include <SPI.h>
#include <SD.h>
const int chipSelect = 10; //Pin de selección de la SD

//Librerías, objetos y variables para RTC
#include <Wire.h>
#include "RTClib.h"
RTC_DS1307 rtc;    //Se declara un objeto RTC

//Librerías, objetos y varialbes para el monitoreo
#include "DHT.h"
#include "EmonLib.h"
DHT senInt(2, DHT22); //Sensor de temperatura interna (Pin digital, Tipo de DHT)
DHT senExt(3, DHT11); //Sensor de temperatura externa
EnergyMonitor velectric;        // Se declara un objeto Energy Monitor
double ip = 30, is = 0.015, rburden = 120; //Datos para la calibración del sensor de corriente
float humInt = 0.0;       //Variable Humedad interna
float tempInt = 0.0;      //variable Temperatura interna
float humExt = 0.0;       //Variable Humedad externa
float tempExt = 0.0;      //Variable Temperatura externa
float Vrms = 0.0;         //Variable Voltaje RMS
float Irms = 0.0;         //Variable Corriente RMS
int lastMin = 0;         //Tiempo de guardado inicial
int minNow = 0;          //Tiempo de guardado actual
int storageTime = 1;      //Tiempo de espera para guardar en minutos (máximo 60 minutos)
int lastHour = 0;         //Tiempo de control inicial
int hourNow = 0;          //Tiempo de control actual
int controlTime = 1;      //Tiempo de espera para realizar control en horas (máximo 23 horas)

//Librerías, objetos y variables para el controlador:
#include <IRremote.h>
IRsend actuadorIR;      //Objeto para transmitir los comandos IR al AC
int carrierFcy = 38;    //Frecuencia portadora para la transmisión IR
//Códigos IR AC Intervenido
unsigned int ir17[] =  {4332, 4472, 552,  1636, 544,  552,  548,  1640, 548,  1636, 548,  552,  544,  548,  548,  1636, 548,  552,  548,  552,  544,  1640, 548,  552,  544,  552,  548,  1596, 588,  1636, 548,  548,  548,  1640, 548,  556,  544,  552,  544,  1640, 548,  1604, 584,  1636, 544,  1640, 548,  1596, 588,  1640, 544,  1644, 548,  1636, 548,  552,  544,  552,  544,  552,  544,  552,  536,  560,  536,  564,  532,  564,  536,  560,  536,  560,  536,  560,  536,  564,  532,  564,  532,  564,  536,  560,  532,  1616, 588,  1600, 584,  1636, 548,  1636, 548,  1636, 548,  1600, 584,  1636, 548,  1636, 508,  5268, 4328, 4472, 548,  1636, 548,  552,  544,  1640, 548,  1636, 548,  552,  544,  552,  544,  1640, 544,  556,  544,  552,  544,  1644, 544,  552,  544,  552,  544,  1640, 548,  1636, 548,  548,  548,  1644, 544,  556,  540,  556,  544,  1640, 548,  1636, 548,  1636, 548,  1600, 584,  1640, 544,  1640, 548,  1608, 580,  1640, 544,  552,  544,  552,  548,  552,  544,  552,  544,  552,  532,  564,  544,  556,  544,  552,  532,  564,  528,  568,  528,  568,  532,  564,  532,  564,  532,  568,  528,  1656, 544,  1604, 584,  1636, 548,  1636, 544,  1640, 544,  1604, 584,  1640, 544,  1644, 504};
unsigned int ir18[] =  {4412, 4388, 552,  1632, 552,  592,  504,  1656, 532,  1636, 552,  588,  508,  592,  504,  1652, 532,  596,  504,  592,  512,  1600, 584,  592,  504,  592,  504,  1632, 552,  1636, 548,  592,  504,  1660, 532,  596,  504,  592,  504,  1640, 548,  1636, 548,  1636, 548,  1656, 532,  1636, 548,  1656, 532,  1640, 548,  1636, 552,  592,  504,  592,  504,  592,  504,  592,  504,  576,  520,  596,  504,  596,  504,  572,  524,  592,  504,  1652, 532,  592,  504,  596,  504,  592,  504,  596,  500,  1668, 524,  1652, 532,  1620, 568,  596,  500,  1624, 564,  1624, 560,  1636, 552,  1652, 536,  5228, 4432, 4408, 532,  1636, 548,  596,  504,  1640, 548,  1636, 548,  596,  500,  596,  500,  1620, 568,  576,  520,  580,  520,  1640, 548,  576,  524,  576,  516,  1640, 548,  1636, 548,  576,  520,  1612, 580,  596,  504,  576,  520,  1660, 528,  1624, 564,  1620, 564,  1636, 548,  1640, 548,  1640, 544,  1612, 580,  1640, 544,  580,  520,  576,  520,  576,  520,  576,  520,  576,  520,  580,  520,  580,  516,  580,  520,  576,  520,  1636, 548,  576,  520,  580,  520,  576,  520,  576,  520,  1644, 548,  1640, 544,  1640, 548,  592,  504,  1644, 544,  1640, 548,  1636, 548,  1640, 548};
unsigned int ir19[] =  {4416, 4400, 552,  1632, 552,  572,  524,  1636, 552,  1636, 548,  592,  504,  576,  520,  1636, 552,  592,  504,  576,  524,  1636, 552,  572,  524,  576,  520,  1636, 548,  1636, 552,  588,  508,  1608, 584,  576,  520,  592,  504,  1608, 584,  1636, 548,  1636, 548,  1636, 552,  1632, 552,  1636, 552,  1640, 552,  1632, 552,  572,  524,  592,  504,  572,  524,  592,  504,  576,  520,  576,  524,  576,  524,  592,  504,  1640, 548,  1636, 548,  592,  504,  576,  524,  592,  504,  592,  504,  1644, 552,  1632, 548,  592,  508,  592,  504,  1620, 564,  1636, 548,  1604, 580,  1640, 552,  5248, 4412, 4360, 580,  1636, 552,  572,  520,  1644, 548,  1636, 548,  592,  504,  592,  504,  1636, 552,  576,  520,  576,  520,  1644, 548,  576,  520,  576,  524,  1636, 548,  1636, 548,  596,  500,  1644, 548,  580,  520,  576,  520,  1660, 528,  1640, 544,  1640, 548,  1636, 548,  1640, 548,  1636, 548,  1644, 548,  1636, 548,  576,  524,  592,  500,  580,  516,  580,  520,  576,  520,  580,  520,  576,  524,  576,  516,  1644, 548,  1636, 548,  596,  500,  576,  520,  580,  520,  576,  520,  1644, 548,  1640, 544,  580,  516,  580,  520,  1640, 544,  1640, 544,  1604, 584,  1640, 548};
unsigned int ir20[] =  {4488, 4376, 568,  1564, 612,  544,  564,  1616, 568,  1620, 568,  540,  560,  528,  564,  1616, 568,  540,  560,  536,  564,  1620, 568,  540,  560,  536,  560,  1612, 568,  1568, 616,  536,  564,  1620, 572,  544,  552,  532,  568,  1568, 624,  1560, 620,  1620, 564,  1620, 564,  1572, 612,  1576, 616,  1572, 616,  1620, 568,  532,  564,  536,  560,  536,  564,  536,  560,  528,  564,  536,  568,  536,  560,  536,  560,  1568, 624,  536,  560,  536,  560,  540,  556,  528,  568,  540,  560,  1564, 624,  1560, 624,  532,  564,  1568, 616,  1624, 564,  1612, 572,  1564, 624,  1564, 528,  5272, 4484, 4320, 616,  1568, 620,  540,  560,  1616, 572,  1564, 620,  536,  560,  540,  556,  1616, 572,  536,  560,  532,  568,  1616, 572,  536,  560,  536,  560,  1564, 620,  1620, 568,  536,  560,  1568, 628,  528,  564,  540,  560,  1616, 572,  1620, 564,  1612, 572,  1612, 572,  1616, 572,  1564, 624,  1568, 620,  1564, 624,  524,  572,  536,  556,  536,  564,  532,  564,  540,  556,  536,  560,  544,  556,  532,  568,  1568, 620,  536,  560,  532,  564,  540,  556,  540,  556,  540,  560,  1620, 568,  1560, 624,  532,  564,  1616, 572,  1564, 624,  1564, 616,  1616, 572,  1568, 528};
unsigned int ir21[] =  {4392, 4408, 472,  1628, 556,  628,  464,  1696, 496,  1716, 468,  604,  468,  628,  492,  1680, 508,  604,  468,  628,  468,  1708, 508,  600,  472,  632,  488,  1684, 508,  1672, 508,  596,  476,  1660, 556,  600,  472,  632,  464,  1704, 512,  1676, 508,  1676, 508,  1676, 512,  1676, 508,  1632, 556,  1636, 552,  1632, 556,  604,  464,  632,  488,  604,  492,  608,  492,  600,  496,  600,  500,  608,  488,  1636, 532,  1700, 504,  608,  488,  596,  500,  604,  492,  608,  488,  604,  496,  1632, 532,  632,  488,  600,  496,  1636, 524,  1656, 532,  1656, 528,  1700, 484,  1704, 480,  5300, 4432, 4368, 508,  1628, 532,  632,  488,  1684, 480,  1704, 480,  628,  492,  604,  492,  1636, 528,  632,  492,  608,  488,  1636, 560,  600,  492,  596,  500,  1632, 528,  1708, 476,  632,  488,  1640, 528,  632,  492,  608,  488,  1636, 552,  1684, 476,  1712, 476,  1708, 476,  1704, 480,  1660, 528,  1660, 528,  1708, 480,  632,  488,  600,  496,  608,  488,  608,  488,  600,  496,  612,  488,  604,  496,  1684, 500,  1680, 504,  604,  492,  608,  488,  608,  492,  604,  492,  608,  552,  1572, 552,  604,  492,  604,  492,  1636, 552,  1632, 528,  1708, 476,  1656, 532,  1708, 476};
unsigned int ir22[] =  {4504, 4296, 476,  1660, 524,  624,  572,  1612, 572,  1612, 576,  476,  620,  476,  620,  1564, 620,  480,  620,  520,  580,  1564, 624,  456,  640,  476,  624,  1560, 620,  1616, 572,  472,  624,  1568, 620,  480,  620,  520,  576,  1612, 576,  1564, 620,  1564, 620,  1568, 620,  1564, 620,  1612, 572,  1572, 620,  1564, 620,  476,  624,  520,  576,  472,  624,  520,  576,  472,  624,  476,  624,  476,  684,  1548, 576,  1608, 576,  1560, 624,  472,  624,  520,  576,  524,  572,  476,  624,  1572, 620,  516,  580,  516,  636,  420,  680,  1548, 580,  1560, 624,  1612, 572,  1564, 548,  5252, 4552, 4248, 620,  1564, 624,  472,  624,  1564, 624,  1564, 620,  476,  680,  460,  640,  1544, 580,  476,  684,  460,  636,  1508, 620,  472,  684,  456,  644,  1544, 636,  1504, 620,  520,  636,  1556, 576,  520,  640,  412,  688,  1552, 632,  1504, 620,  1564, 680,  1504, 624,  1560, 624,  1560, 624,  1616, 636,  1548, 576,  472,  688,  412,  684,  412,  688,  456,  640,  408,  688,  412,  684,  412,  688,  1500, 684,  1548, 636,  1500, 684,  412,  684,  456,  644,  408,  688,  412,  688,  1500, 688,  456,  640,  408,  688,  408,  692,  1500, 684,  1544, 640,  1544, 640,  1504, 688};
unsigned int ir23[] =  {4456, 4388, 504,  1680, 480,  632,  488,  1688, 504,  1680, 480,  632,  488,  600,  496,  1636, 548,  612,  488,  612,  488,  1692, 496,  604,  492,  608,  492,  1632, 552,  1632, 552,  608,  488,  1696, 496,  608,  492,  608,  488,  1636, 552,  1632, 528,  1704, 504,  1636, 552,  1632, 552,  1684, 504,  1636, 552,  1636, 548,  608,  492,  608,  488,  604,  492,  604,  492,  608,  488,  612,  552,  544,  492,  1680, 504,  604,  492,  1640, 548,  604,  492,  608,  548,  548,  492,  608,  488,  1640, 552,  600,  496,  1688, 504,  600,  496,  1688, 500,  1636, 552,  1680, 504,  1680, 480,  5264, 4488, 4368, 476,  1656, 552,  608,  488,  1640, 548,  1636, 552,  608,  488,  604,  556,  1568, 552,  612,  488,  600,  556,  1628, 504,  596,  564,  544,  548,  1572, 552,  1684, 504,  604,  556,  1572, 556,  608,  552,  536,  496,  1688, 504,  1632, 552,  1632, 552,  1688, 496,  1636, 552,  1636, 548,  1688, 504,  1632, 552,  608,  552,  544,  552,  540,  564,  540,  556,  540,  548,  552,  556,  536,  560,  1568, 612,  548,  488,  1636, 552,  608,  552,  544,  556,  536,  560,  544,  556,  1624, 500,  608,  488,  1640, 612,  536,  564,  1572, 552,  1632, 552,  1684, 500,  1688, 476};
unsigned int ir24[] =  {4576, 4292, 576,  1560, 684,  476,  624,  1504, 680,  1504, 680,  464,  636,  412,  684,  1504, 680,  416,  684,  412,  692,  1500, 684,  460,  636,  460,  640,  1544, 640,  1500, 680,  416,  688,  1548, 576,  476,  688,  456,  640,  1548, 636,  1556, 572,  1612, 632,  1504, 620,  1608, 576,  1616, 572,  1568, 624,  1608, 576,  520,  576,  520,  636,  416,  684,  412,  684,  464,  632,  416,  684,  456,  644,  1552, 568,  520,  576,  476,  680,  416,  624,  524,  632,  412,  684,  416,  684,  1508, 620,  524,  576,  1612, 576,  1608, 576,  1560, 624,  1564, 620,  1608, 576,  1572, 540,  5252, 4552, 4296, 476,  1708, 576,  476,  620,  1612, 580,  1608, 576,  472,  624,  476,  620,  1608, 576,  476,  624,  520,  576,  1568, 624,  472,  624,  476,  620,  1608, 576,  1564, 620,  476,  624,  1612, 576,  476,  624,  476,  620,  1568, 620,  1612, 572,  1564, 620,  1564, 624,  1608, 576,  1564, 624,  1612, 576,  1612, 576,  516,  580,  476,  680,  416,  684,  460,  636,  460,  636,  416,  680,  464,  636,  1504, 620,  476,  620,  476,  684,  412,  688,  408,  688,  456,  636,  420,  680,  1508, 624,  524,  632,  1504, 624,  1560, 624,  1560, 624,  1560, 624,  1608, 580,  1608, 500};
//unsigned int ir25[] =  {4484, 4332, 612,  1572, 608,  544,  556,  1628, 500,  1632, 616,  544,  464,  632,  464,  1708, 504,  608,  488,  604,  492,  1640, 616,  544,  464,  620,  476,  1660, 552,  1632, 552,  608,  464,  1664, 528,  632,  464,  636,  460,  1664, 552,  1680, 504,  1684, 500,  1680, 504,  1616, 572,  1632, 552,  1640, 544,  1644, 524,  632,  464,  624,  472,  636,  460,  628,  492,  596,  572,  532,  496,  1688, 480,  1704, 504,  608,  464,  632,  464,  624,  564,  484,  520,  624,  568,  536,  564,  528,  572,  524,  572,  1576, 516,  1720, 468,  1660, 524,  1704, 480,  1708, 476,  1708, 480,  5272, 4556, 4248, 524,  1664, 520,  624,  572,  1612, 480,  1708, 476,  624,  572,  472,  624,  1564, 620,  524,  576,  524,  576,  1616, 572,  472,  628,  516,  580,  1608, 576,  1564, 620,  476,  620,  1616, 576,  520,  580,  472,  624,  1612, 576,  1568, 616,  1612, 576,  1564, 620,  1564, 620,  1612, 576,  1616, 576,  1608, 576,  520,  640,  412,  684,  416,  684,  408,  688,  412,  684,  460,  640,  1504, 684,  1504, 620,  476,  684,  468,  632,  408,  688,  456,  640,  456,  644,  456,  640,  456,  644,  408,  688,  1548, 640,  1500, 684,  1544, 640,  1500, 688,  1500, 684,  1548, 644};
//unsigned int ir26[] =  {4488, 4352, 528,  1632, 552,  608,  492,  1636, 552,  1684, 500,  596,  500,  608,  488,  1684, 504,  600,  556,  544,  560,  1572, 552,  596,  568,  540,  552,  1616, 504,  1684, 500,  608,  552,  1576, 552,  612,  556,  532,  560,  1572, 552,  1636, 548,  1632, 556,  1632, 552,  1632, 616,  1572, 552,  1640, 552,  1628, 616,  544,  492,  600,  560,  532,  560,  540,  560,  544,  552,  536,  568,  1568, 620,  1568, 548,  604,  560,  1620, 568,  540,  560,  532,  564,  532,  560,  548,  556,  532,  564,  544,  552,  1620, 572,  532,  560,  1572, 552,  1636, 612,  1572, 552,  1632, 528,  5260, 4492, 4364, 564,  1568, 616,  540,  560,  1568, 620,  1568, 616,  544,  556,  540,  556,  1564, 620,  544,  556,  544,  556,  1564, 616,  536,  568,  536,  560,  1568, 616,  1616, 568,  540,  556,  1572, 620,  540,  560,  540,  556,  1568, 620,  1564, 616,  1620, 572,  1564, 616,  1568, 616,  1572, 616,  1624, 568,  1568, 616,  544,  556,  532,  564,  536,  564,  536,  560,  528,  568,  536,  560,  1620, 572,  1564, 616,  544,  556,  1568, 624,  536,  556,  532,  568,  536,  560,  540,  560,  532,  564,  540,  556,  1572, 620,  528,  564,  1572, 616,  1568, 616,  1568, 616,  1620, 476};
//unsigned int ir27[] =  {4488, 4376, 504,  1680, 564,  548,  552,  1572, 552,  1684, 568,  532,  568,  536,  556,  1624, 560,  540,  560,  532,  568,  1572, 552,  604,  492,  600,  564,  1564, 620,  1616, 504,  604,  556,  1576, 620,  532,  564,  540,  560,  1616, 568,  1568, 612,  1624, 572,  1616, 564,  1568, 552,  1632, 620,  1572, 616,  1568, 616,  544,  556,  544,  556,  540,  556,  536,  560,  532,  564,  544,  556,  1620, 568,  544,  556,  536,  560,  1616, 568,  536,  560,  540,  556,  532,  568,  536,  564,  540,  556,  1616, 568,  1564, 620,  540,  560,  1568, 612,  1628, 564,  1564, 624,  1564, 528,  5268, 4492, 4364, 572,  1564, 620,  528,  568,  1568, 624,  1564, 620,  536,  560,  536,  556,  1568, 620,  536,  564,  532,  564,  1620, 572,  528,  568,  540,  556,  1564, 620,  1564, 620,  536,  560,  1576, 620,  536,  560,  540,  556,  1572, 620,  1612, 568,  1572, 616,  1612, 572,  1612, 576,  1564, 620,  1620, 572,  1616, 564,  536,  568,  536,  560,  532,  564,  528,  568,  528,  568,  540,  560,  1572, 620,  532,  564,  536,  560,  1612, 576,  532,  560,  532,  568,  536,  560,  536,  564,  532,  564,  1564, 624,  1564, 620,  540,  560,  1564, 620,  1568, 620,  1564, 620,  1568, 528};
//unsigned int ir28[] =  {4512, 4364, 472,  1708, 476,  620,  564,  1576, 524,  1664, 524,  632,  556,  528,  568,  1568, 524,  636,  556,  528,  572,  1616, 504,  612,  544,  492,  616,  1568, 612,  1616, 480,  620,  568,  1576, 548,  600,  564,  536,  564,  1616, 480,  1660, 524,  1708, 476,  1660, 524,  1660, 524,  1664, 524,  1668, 524,  1660, 524,  620,  568,  528,  572,  520,  580,  472,  624,  476,  620,  476,  624,  1568, 612,  536,  568,  476,  624,  520,  576,  472,  624,  476,  620,  476,  620,  476,  624,  476,  624,  1564, 524,  1664, 520,  1708, 480,  1660, 524,  1660, 524,  1708, 476,  1664, 524,  5272, 4548, 4256, 524,  1660, 524,  636,  556,  1572, 524,  1704, 480,  632,  464,  624,  572,  1560, 528,  620,  572,  480,  620,  1612, 572,  532,  568,  524,  576,  1564, 524,  1708, 476,  632,  556,  1620, 480,  636,  556,  528,  572,  1616, 476,  1660, 524,  1664, 520,  1708, 480,  1660, 524,  1664, 524,  1668, 520,  1664, 524,  624,  564,  480,  620,  480,  616,  476,  624,  476,  620,  476,  624,  1612, 568,  540,  564,  524,  576,  472,  624,  472,  624,  476,  620,  472,  624,  476,  624,  476,  620,  1572, 520,  1664, 520,  1712, 476,  1660, 524,  1660, 524,  1708, 476,  1664, 524};
//unsigned int ir29[] =  {4440, 4320, 620,  1616, 568,  536,  564,  1568, 620,  1624, 560,  532,  564,  480,  616,  1568, 620,  540,  560,  540,  560,  1620, 568,  536,  560,  536,  560,  1564, 620,  1568, 620,  532,  560,  1628, 568,  528,  568,  536,  560,  1620, 572,  1612, 572,  1568, 616,  1568, 620,  1564, 620,  1620, 568,  1568, 620,  1620, 568,  532,  564,  532,  568,  528,  568,  536,  560,  536,  564,  532,  564,  1620, 572,  528,  568,  1568, 624,  532,  564,  536,  560,  532,  564,  536,  560,  532,  568,  536,  564,  1620, 568,  532,  564,  1620, 568,  1568, 620,  1564, 620,  1616, 572,  1616, 476,  5264, 4416, 4440, 572,  1564, 620,  536,  560,  1568, 620,  1568, 620,  536,  560,  532,  564,  1564, 620,  544,  556,  540,  556,  1620, 572,  532,  564,  536,  560,  1568, 620,  1612, 572,  540,  556,  1624, 568,  540,  560,  536,  560,  1568, 624,  1612, 572,  1612, 572,  1564, 624,  1560, 624,  1568, 620,  1624, 568,  1560, 624,  528,  568,  528,  568,  536,  560,  540,  556,  532,  564,  544,  556,  1572, 620,  532,  564,  1620, 572,  528,  564,  536,  564,  536,  560,  540,  552,  544,  556,  544,  556,  1624, 568,  536,  560,  1568, 620,  1616, 572,  1560, 624,  1564, 620,  1616, 480};
//unsigned int ir30[] =  {4516, 4312, 520,  1708, 504,  596,  572,  1612, 572,  1572, 544,  596,  576,  476,  620,  1564, 620,  528,  572,  480,  620,  1620, 568,  528,  568,  480,  620,  1612, 572,  1612, 572,  524,  572,  1624, 568,  476,  624,  476,  620,  1568, 620,  1568, 620,  1564, 620,  1564, 624,  1612, 572,  1564, 624,  1616, 576,  1608, 576,  476,  624,  472,  624,  472,  624,  472,  624,  520,  636,  468,  632,  1508, 624,  476,  624,  1564, 624,  1560, 624,  480,  620,  520,  636,  460,  636,  416,  684,  460,  640,  1560, 564,  472,  684,  460,  640,  1548, 632,  1504, 680,  1504, 624,  1564, 688,  5112, 4552, 4252, 684,  1500, 688,  412,  684,  1504, 684,  1548, 636,  460,  640,  408,  692,  1544, 636,  412,  688,  460,  640,  1500, 692,  452,  644,  408,  688,  1496, 688,  1496, 688,  408,  688,  1548, 644,  412,  688,  456,  640,  1500, 688,  1500, 688,  1540, 644,  1496, 688,  1500, 684,  1500, 688,  1548, 644,  1500, 684,  456,  644,  408,  688,  408,  688,  408,  688,  496,  604,  408,  692,  1544, 644,  456,  640,  1504, 688,  1544, 640,  460,  636,  412,  684,  408,  692,  452,  644,  416,  684,  1496, 688,  456,  644,  408,  688,  1544, 640,  1496, 688,  1500, 684,  1504, 684};
//unsigned int irOn[] =  {4508, 4292, 644,  1496, 684,  460,  640,  1552, 636,  1496, 688,  456,  640,  412,  684,  1500, 688,  408,  688,  416,  684,  1500, 688,  460,  636,  460,  636,  1500, 688,  1500, 684,  412,  688,  1500, 752,  348,  688,  456,  640,  1504, 684,  1504, 680,  1548, 640,  1496, 688,  1540, 644,  1500, 688,  1504, 688,  1500, 684,  412,  684,  460,  644,  464,  624,  412,  684,  412,  684,  416,  684,  1504, 688,  456,  640,  1500, 688,  1500, 688,  452,  644,  412,  684,  456,  644,  456,  640,  412,  688,  1500, 684,  460,  636,  408,  688,  1552, 636,  1496, 688,  1496, 688,  1500, 688,  5112, 4552, 4296, 644,  1496, 688,  408,  688,  1504, 684,  1588, 600,  408,  688,  408,  688,  1500, 684,  412,  688,  412,  684,  1504, 688,  408,  688,  456,  640,  1500, 684,  1500, 684,  412,  688,  1548, 644,  460,  636,  456,  640,  1504, 684,  1548, 640,  1496, 688,  1500, 684,  1500, 688,  1500, 688,  1500, 688,  1548, 640,  408,  684,  412,  688,  408,  688,  412,  684,  408,  688,  464,  632,  1552, 640,  412,  684,  1504, 688,  1544, 640,  408,  688,  408,  688,  412,  684,  460,  640,  412,  688,  1496, 688,  496,  600,  456,  640,  1544, 644,  1496, 688,  1496, 688,  1548, 640};
//unsigned int irOff[] = {4332, 4480, 536,  1560, 624,  560,  464,  1636, 556,  1716, 468,  632,  464,  604,  468,  1744, 464,  632,  464,  600,  476,  1660, 556,  604,  468,  628,  464,  1716, 496,  1676, 512,  628,  464,  1640, 556,  604,  468,  1704, 504,  1632, 556,  1672, 512,  1684, 500,  604,  468,  1708, 508,  1632, 552,  1728, 464,  604,  464,  628,  496,  600,  496,  608,  488,  1680, 480,  632,  488,  612,  488,  1640, 528,  1656, 552,  1632, 556,  604,  488,  608,  488,  608,  492,  604,  492,  608,  488,  612,  488,  604,  492,  608,  488,  1636, 532,  1656, 552,  1676, 508,  1632, 556,  1628, 532,  5356, 4400, 4320, 552,  1680, 504,  604,  492,  1632, 532,  1656, 552,  608,  488,  608,  488,  1680, 480,  636,  488,  612,  488,  1636, 528,  632,  488,  600,  496,  1688, 496,  1636, 528,  628,  492,  1640, 552,  608,  488,  1632, 552,  1688, 476,  1704, 480,  1704, 480,  632,  488,  1640, 528,  1704, 504,  1700, 492,  608,  488,  600,  496,  600,  496,  608,  492,  1632, 528,  628,  492,  608,  488,  1692, 476,  1660, 552,  1676, 508,  604,  492,  608,  488,  604,  492,  608,  488,  612,  488,  604,  496,  604,  492,  600,  496,  1684, 480,  1656, 552,  1680, 508,  1632, 552,  1696, 468};

void setup() {

  SD.begin(chipSelect, 11, 12, 13);

  rtc.begin();

  //    rtc.adjust(DateTime(F(__DATE__), F(__TIME__))); //Ajusta la fecha y la hora del RTC


  //Calibración del sensor de corriente y voltaje
  double calibration = ((ip / is) / rburden);
  velectric.current(0, calibration);                 //Corriente: (Pin de lectura, Calibración)
  velectric.voltage(1, 112, 1.7);                    //Voltaje: (Pin de lectura, calibración, Desfase)
  //Fin calibración del sensor de corriente y voltaje
}

void loop() {

  energy();
  climate();
  timer();
}

//Función para el alamacenamiento de los datos del monitoreo:
void storage() {

  DateTime now = rtc.now();

  File dataFile = SD.open("Mon1.txt", FILE_WRITE);

  // Escribiendo en la SD:

  if (dataFile) {

    //1. Imprimir la fecha y la hora:

    dataFile.print(now.year(), DEC);
    dataFile.print('/');
    dataFile.print(now.month(), DEC);
    dataFile.print('/');
    dataFile.print(now.day(), DEC);
    dataFile.print("  ");
    dataFile.print(now.hour(), DEC);
    dataFile.print(':');
    dataFile.print(now.minute(), DEC);
    dataFile.print(':');
    dataFile.print(now.second(), DEC);
    dataFile.print("  ");

    //2. Imprimir los valores del monitoreo:

    dataFile.print(humInt);
    dataFile.print("  ");
    dataFile.print(tempInt);
    dataFile.print("  ");
    dataFile.print(humExt);
    dataFile.print("  ");
    dataFile.print(tempExt);
    dataFile.print("  ");
    dataFile.print(Vrms);
    dataFile.print("  ");
    dataFile.println(Irms);

    //3. Cerrar el archivo en la SD para evitar pérdida de información

    dataFile.close();
  }
}

//Función para el monitoreo de la corriente y el voltaje:
void energy() {
  for (int i = 0; i >= 5; i++) {
    velectric.calcVI(50000000, 1000);        // Calcula corriente y voltaje
  }
  velectric.calcVI(50000000, 2000);
  Vrms = velectric.Vrms;
  Irms = velectric.Irms;
}

//Función para el monitoreo de la temperatura interna y externa:
void climate() {

  humInt = senInt.readHumidity();
  tempInt = senInt.readTemperature();

  humExt = senExt.readHumidity();
  tempExt = senExt.readTemperature();

}

//Función para guardar datos cada cierto tiempo:
void timer() {

  DateTime now = rtc.now();
  minNow = now.minute();
  hourNow = now.hour();
  //Definición de tiempo para guardar monitoreo
  if (minNow - lastMin >= storageTime) {
    storage();
    lastMin = minNow;
  }
  if (minNow - lastMin < 0) {
    lastMin = -1;
  }
  //Definición de tiempo para realizar control
  if (hourNow - lastHour >= controlTime) {
    control();
    lastHour = hourNow;
  }
  if (hourNow - lastHour < 0) {
    lastHour = -1;
  }
}

//Función para aplicar control al AC. El control de esta función no es PID.
void control () {
  if (Irms >= 1.8) {
    //double spIc = -0.0228*(pow(tempExt, 2)) + 1.6647*(tempExt) - 2.8486;     //Ecuación polinómica a partir de los promedios
    double spIc = 0.146954358259569 * tempExt + 22.1773101681836;             //Ecuación de la regresión Lineal
    float spIr1 = (round(spIc * 10)) / 10.0;
    int spIr2 = round(spIr1);
    int spIn = map(spIr2, 15, 30, 7, 27);                                         //Set Point Ideal normalizado.

    switch (spIn) {
      case (17): {
          actuadorIR.sendRaw(ir17, sizeof(ir17) / sizeof(ir17[0]), carrierFcy);
          break;
        }
      case (18): {
          actuadorIR.sendRaw(ir18, sizeof(ir18) / sizeof(ir18[0]), carrierFcy);
          break;
        }
      case (19): {
          actuadorIR.sendRaw(ir19, sizeof(ir19) / sizeof(ir19[0]), carrierFcy);
          break;
        }
      case (20): {
          actuadorIR.sendRaw(ir20, sizeof(ir20) / sizeof(ir20[0]), carrierFcy);
          break;
        }
      case (21): {
          actuadorIR.sendRaw(ir21, sizeof(ir21) / sizeof(ir21[0]), carrierFcy);
          break;
        }
      case (22): {
          actuadorIR.sendRaw(ir22, sizeof(ir22) / sizeof(ir22[0]), carrierFcy);
          break;
        }
      case (23): {
          actuadorIR.sendRaw(ir23, sizeof(ir23) / sizeof(ir23[0]), carrierFcy);
          break;
        }
      case (24): {
          actuadorIR.sendRaw(ir24, sizeof(ir24) / sizeof(ir24[0]), carrierFcy);
          break;
        }
    }
  }
}
